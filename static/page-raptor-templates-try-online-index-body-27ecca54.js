raptor.defineClass("templating.taglibs.core.CoreTagTransformer",function(e){"use strict";var t=e.extend,n=e.forEach,r="http://raptorjs.org/templates/core",i=e.errors,s=e.require("templating.compiler.Node"),o=e.require("templating.taglibs.core.WriteNode"),u=e.require("templating.taglibs.core.ForNode"),a=e.require("templating.taglibs.core.IfNode"),f=e.require("templating.taglibs.core.WhenNode"),l=e.require("templating.taglibs.core.OtherwiseNode"),c=e.require("templating.taglibs.core.TagHandlerNode"),h=e.require("templating.compiler.Expression"),p=e.require("templating.compiler.AttributeSplitter"),d=e.require("templating.compiler.TypeConverter"),v=function(e,t,n){return d.convert(e,t,n)};return{process:function(i,s){var d=this,m,g,y,b,w,E,S,x,T,N=function(e,t){n(i.getAttributes(),function(n){if(n.uri==="http://www.w3.org/2000/xmlns/"||n.uri==="http://www.w3.org/XML/1998/namespace"||n.prefix=="xmlns")return;var r=n.prefix,o=n.prefix&&n.uri!=P.taglib.uri?n.uri:null,u=P.getAttributeDef(o,n.localName);!u&&o&&(o=s.taglibs.resolveShortName(o),u=P.getAttributeDef(o,n.localName));var a=u?u.type||"string":"string",f,l=n.uri;try{f=v(n.value,a,u?u.allowExpressions!==!1:!0)}catch(c){i.addError('Invalid attribute value of "'+n.value+'" for attribute "'+n.name+'": '+c.message),f=n.value}l===P.taglib.uri&&(l="",r=""),!u&&!P.dynamicAttributes&&i.addError('The tag "'+P.name+'" in taglib "'+P.taglib.uri+'" does not support attribute "'+n+'"'),e.call(t,l,n.localName,f,r,u)},this)};(w=i.getAttributeNS(r,"parseBodyText"))!=null&&(i.removeAttributeNS(r,"parseBodyText"),i.parseBodyText=w!=="false");if((b=i.getAttributeNS(r,"when"))!=null){i.removeAttributeNS(r,"when");var C=new f({test:new h(b),pos:i.getPosition()});i.parentNode.replaceChild(C,i),C.appendChild(i)}if(i.getAttributeNS(r,"otherwise")!=null){i.removeAttributeNS(r,"otherwise");var k=new l({pos:i.getPosition()});i.parentNode.replaceChild(k,i),k.appendChild(i)}(y=i.getAttributeNS(r,"attrs"))!=null&&(i.removeAttributeNS(r,"attrs"),i.dynamicAttributesExpression=y);if((m=i.getAttributeNS(r,"for"))!=null){i.removeAttributeNS(r,"for");var L=p.parse(m,{each:{type:"custom"},separator:{type:"expression"},varStatus:{type:"identifier"},forLoop:{type:"boolean",allowExpressions:!1}},{defaultName:"each",errorHandler:function(e){i.addError('Invalid c:for attribute of "'+m+'". Error: '+e)}});L.pos=i.getPosition();var A=new u(L);i.parentNode.replaceChild(A,i),A.appendChild(i)}if((g=i.getAttributeNS(r,"if"))!=null){i.removeAttributeNS(r,"if");var O=new a({test:new h(g),pos:i.getPosition()});i.parentNode.replaceChild(O,i),O.appendChild(i)}if((S=i.getAttributeNS(r,"bodyContent"))!=null){i.removeAttributeNS(r,"bodyContent");var M=new o({expression:S,pos:i.getPosition()});i.removeChildren(),i.appendChild(M)}i.getAttributeNS&&(E=i.getAttributeNS(r,"strip"))!=null&&(i.removeAttributeNS(r,"strip"),i.setStripExpression||i.addError("The c:strip directive is not allowed for target node"),i.setStripExpression(E));if(i.getAttributeNS&&(x=i.getAttributeNS(r,"replace"))!=null){i.removeAttributeNS(r,"replace");var _=new o({expression:x,pos:i.getPosition()});i.parentNode.replaceChild(_,i),i=_}var D=i.uri,P=s.taglibs.getTagDef(D,i.localName);if(P){P.preserveSpace&&(i.preserveSpace=!0);if(P.handlerClass)c.convertNode(i,P),N(function(e,t,n,r,s){s?i.setPropertyNS(e,t,n):i.addDynamicAttribute(r?r+":"+t:t,n)});else if(P.compilerClass){var H=e.require(P.compilerClass);t(i,H.prototype),H.call(i),i.setNodeClass(H),N(function(e,t,n){i.setPropertyNS(e,t,n)})}}else D&&s.taglibs.isTaglib(D)&&i.addError("Tag "+i.toString()+' is not allowed in taglib "'+D+'"')}}});
raptor.defineClass("templating.taglibs.core.CoreTextTransformer",function(){"use strict";var e=raptor.require("templating.compiler.ExpressionParser"),t=raptor.require("templating.compiler.TextNode"),n=raptor.require("templating.taglibs.core.WriteNode"),r=raptor.require("templating.taglibs.core.ScriptletNode");return{process:function(i,s){if(i.parentNode&&i.parentNode.parseBodyText===!1)return;var o=[];e.parse(i.text,{text:function(e){o.push({text:e})},expression:function(e){o.push({expression:e})},scriptlet:function(e){o.push({scriptlet:e})},error:function(e){i.addError(e)}},this);if(o.length>0){var u=0;o[0].text?(i.text=o[0].text,u=1):(i.text="",u=0);var a=[];for(var f=u;f<o.length;f++){var l=o[f],c=null;l.hasOwnProperty("text")?(c=new t(l.text),c.setTransformerApplied(this)):l.hasOwnProperty("expression")?c=new n({expression:l.expression,escapeXml:l.expression.escapeXml!==!1}):l.hasOwnProperty("scriptlet")&&(c=new r(l.scriptlet)),c&&a.push(c)}i.parentNode.insertAfter(a,i)}}}});
raptor.defineClass("templating.taglibs.core.ForNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=/^(.+)\s+in\s+(.+)$/,n=raptor.require("json.stringify").stringify,r=function(e){var n=e.match(t);if(!n)throw new Error('Invalid each attribute of "'+e+'"');return{"var":n[1],"in":n[2]}},i=function(e){i.superclass.constructor.call(this),e&&this.setProperties(e)};return i.prototype={doGenerateCode:function(e){var t=this.getProperty("each"),i=this.getProperty("separator"),s=this.getProperty("varStatus");if(!t){this.addError('"each" attribute is required'),this.generateCodeForChildren(e);return}var o;try{o=r(t)}catch(u){this.addError(u.message),this.generateCodeForChildren(e);return}var a=e.makeExpression(o["in"]),f=o["var"];i&&!s&&(s="__loop");var l;s?(l=[f,s],e.addJavaScriptCode(e.getStaticHelperFunction("forEachVarStatus","fv")+"("+a+", function("+l.join(",")+"){\n"),this.generateCodeForChildren(e,!0),i&&(e.incIndent(),e.addJavaScriptCode("if (!"+s+".isLast()) {\n"),e.incIndent(),e.addWrite(e.isExpression(i)?i.getExpression():n(i)),e.decIndent(),e.addJavaScriptCode("}\n"),e.decIndent()),e.addJavaScriptCode("});\n\n")):this.getProperty("forLoop")===!0?(l=["__array","__index","__length",f],e.addJavaScriptCode(e.getStaticHelperFunction("forLoop","fl")+"("+a+", function("+l.join(",")+"){\n"),e.incIndent(),e.addJavaScriptCode("for (;__index<__length;__index++) {\n"),e.incIndent(),e.addJavaScriptCode(f+"=__array[__index];\n"),this.generateCodeForChildren(e),e.decIndent(),e.decIndent(),e.addJavaScriptCode("}});\n")):(l=[f],e.addJavaScriptCode(e.getStaticHelperFunction("forEach","f")+"("+a+", function("+l.join(",")+") {\n"),this.generateCodeForChildren(e,!0),e.addJavaScriptCode("});\n\n"))}},i});
raptor.defineClass("templating.taglibs.core.IfNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=function(e){t.superclass.constructor.call(this),e&&this.setProperties(e)};return t.prototype={doGenerateCode:function(e){var t=this.getProperty("test");t||this.addError('"test" attribute is required'),e.addJavaScriptCode("if ("+t+") {\n"),this.generateCodeForChildren(e,!0),e.addJavaScriptCode("}\n\n")}},t});
raptor.defineClass("templating.taglibs.core.TagHandlerNode","templating.compiler.Node",function(e){"use strict";var t=e.extend,n=e.forEach,r=e.require("json.stringify").stringify,i=e.forEachEntry,s=e.require("templating.compiler.Expression"),o=function(e,t){var n=e._handlerVars;n||(e._handlerVars=n={});var i=n[t];return i||(n[t]=i=t.replace(/[.\-]/g,"_"),e.addStaticVar(i,e.getStaticHelperFunction("getTagHandler","t")+"("+r(t)+")")),i},u=function(e,t){var n,o=[];return e?(i(e,function(e,n){n instanceof s?o.push(t.indent(1)+r(e)+":"+n.expression):typeof n=="string"?o.push(t.indent(1)+r(e)+":"+r(n)):o.push(t.indent(1)+r(e)+":"+n)}),o.length?"{\n"+o.join(",\n")+"\n"+t.indent()+"}":"{}"):"{}"},a=function(e){this.nodeType||a.superclass.constructor.call(this),this.tagDef=e,this.dynamicAttributes=null};return a.convertNode=function(e,n){t(e,a.prototype),a.call(e,n)},a.prototype={addDynamicAttribute:function(e,t){this.dynamicAttributes||(this.dynamicAttributes={}),this.dynamicAttributes[e]=t},doGenerateCode:function(e){var t=o(e,this.tagDef.handlerClass);n(this.tagDef.importedVariables,function(e){this.setProperty(e.propertyName,new s(e.expression))},this),e.addJavaScriptCode("context.t(\n"),e.incIndent(),e.addJavaScriptCode(t+",\n"),e.addJavaScriptCode(u(this.getProperties(),e)+",\n");if(this.hasChildren()){var r=[];n(this.tagDef.nestedVariables,function(e){r.push(e.name)}),e.addJavaScriptCode("function("+r.join(",")+") {\n"),this.generateCodeForChildren(e,!0),e.addJavaScriptCode("}")}else e.addJavaScriptCode("null");var i=this.getPropertyNamespaces(),a=[];n(i,function(t){if(t!==""){var n=this.getPropertiesNS(t);a.push('"'+t+'":'+u(n,e))}},this),this.dynamicAttributes&&a.push('"*":'+u(this.dynamicAttributes,e)),a.length&&(e.addJavaScriptCode(",\n",!1),e.addJavaScriptCode("{"),e.incIndent(),e.addJavaScriptCode(a.join("\n,")),e.decIndent(),e.addJavaScriptCode("}")),e.decIndent(),e.addJavaScriptCode(");\n\n",!1)}},a});
raptor.defineClass("templating.taglibs.core.TemplateNode","templating.compiler.Node",function(){"use strict";var e=raptor.forEach,t=function(e){t.superclass.constructor.call(this),e&&this.setProperties(e)};return t.prototype={doGenerateCode:function(t){var n=this.getProperty("name"),r=this.getProperty("params"),i=function(e){var n=e.replace(/[^a-zA-Z0-9]+/g,"_");return t.hasStaticVar(n)||t.addStaticVar(n,JSON.stringify(e)),n},s;r?(r=r.split(/\s*,\s*/g),e(r,function(e){t.addVar(e,"data."+e)},this)):r=null,this.forEachProperty(function(n,r,o){n||(n=this.uri),r==="functions"&&e(o.split(/\s*[,;]\s*/g),function(e){var r=t.compiler.taglibs.getFunction(n,e);r?(s=i(r.functionClass),r.bindToContext===!0?t.addVar(e,"context.h("+s+","+JSON.stringify(e)+")"):t.addStaticVar(e,t.getStaticHelperFunction("getHelper","h")+"("+s+","+JSON.stringify(e)+")")):this.addError('Function with name "'+e+'" not found in taglib "'+n+'"')},this)},this),n?t.setTemplateName(n):t.getTemplateName()||this.addError('The "name" attribute is required for the '+this.toString()+" tag or it must be passed in as a compiler option."),this.generateCodeForChildren(t)}},t});
raptor.defineClass("templating.taglibs.core.WriteNode","templating.compiler.Node",function(){"use strict";var e=function(t){e.superclass.constructor.call(this,"write"),t&&this.setProperties(t)};return e.prototype={doGenerateCode:function(e){var t=this.getExpression(),n=this.getProperty("escapeXml")!==!1;t&&e.addWrite(t,{escapeXml:n})},getExpression:function(){return this.getProperty("expression")||this.getProperty("value")||this.getAttribute("expression")||this.getAttribute("value")},toString:function(){return'<c:write expression="'+this.getExpression()+'">'}},e});
raptor.defineClass("templating.taglibs.core.InvokeNode","templating.compiler.Node",function(){"use strict";var e=raptor.forEach,t=function(e){t.superclass.constructor.call(this),e&&this.setProperties(e)};return t.prototype={doGenerateCode:function(t){var n=this.getProperty("function"),r,i=t.getAttribute("core:definedFunctions");n||this.addError('"function" attribute is required');if(n.indexOf("(")===-1){r=i?i[n]:null;var s=[],o={},u=[];r&&(u=r.params||[],e(u,function(e){o[e]=!0},this)),this.forEachPropertyNS("",function(e,t){if(e==="function")return;o[e]||this.addError('Parameter with name "'+e+'" not supported for function with name "'+n+'". Allowed parameters: '+u.join(", "))},this),e(u,function(e){o[e]=!0;var t=this.getAttribute(e);t==null?s.push("undefined"):s.push(this.getProperty(e))},this),t.addWrite(n+"("+s.join(",")+")")}else{var a=n.substring(0,n.indexOf("("));r=i?i[a]:null,r?t.addWrite(n):t.addJavaScriptCode(n+";\n")}}},t});
raptor.defineClass("templating.taglibs.core.ScriptletNode","templating.compiler.Node",function(){"use strict";var e=function(t){e.superclass.constructor.call(this,"scriptlet"),this.code=t};return e.prototype={doGenerateCode:function(e){this.code&&e.addJavaScriptCode(this.code)},toString:function(){return"{%"+this.code+"%}"}},e});
raptor.defineClass("templating.taglibs.core.ChooseNode","templating.compiler.Node",function(e){"use strict";var t=e.require("strings"),n=e.require("templating.taglibs.core.WhenNode"),r=e.require("templating.taglibs.core.OtherwiseNode"),i=function(e){i.superclass.constructor.call(this)};return i.prototype={doGenerateCode:function(e){var i=null,s=!1;this.forEachChild(function(o){o.isTextNode()?t.isEmpty(o.getText())||this.addError('Static text "'+t.trim(o.getText())+'" is not allowed in '+this.toString()+" tag."):o.getNodeClass()===n?(i&&this.addError(i+" tag must be last child of tag "+this+"."),s||(s=!0,o.firstWhen=!0),o.generateCode(e)):o.getNodeClass()===r?(i&&this.addError("More than one "+i+" tag is not allowed as child of tag "+this+"."),i=o,o.generateCode(e)):this.addError(o+" tag is not allowed as child of tag "+this+".")},this),s||this.addError(""+i+" tag is required to have at least one sibling <c:when> tag.")}},i});
raptor.defineClass("templating.taglibs.core.DefNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=raptor.require("strings"),n=/^([A-Za-z_][A-Za-z0-9_]*)\(((?:[A-Za-z_][A-Za-z0-9_]*,\s*)*[A-Za-z_][A-Za-z0-9_]*)?\)$/,r=function(e){r.superclass.constructor.call(this),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){var r=this.getProperty("function");if(!r){this.addError('"function" attribute is required'),this.generateCodeForChildren(e);return}r=t.trim(r);var i=n.exec(r);if(!i){this.addError('Invalid function name of "'+r+'"'),this.generateCodeForChildren(e);return}var s=i[1],o=i[2]?i[2].split(/\s*,\s*/):[],u=e.getAttribute("core:definedFunctions");u||(u=e.setAttribute("core:definedFunctions",{})),u[s]={params:o},e.addJavaScriptCode("function "+r+"{\n"),e.incIndent(),e.addJavaScriptCode("return context.c(function() {\n"),this.generateCodeForChildren(e,!0),e.addJavaScriptCode("});\n"),e.decIndent(),e.addJavaScriptCode("}\n")}},r});
raptor.defineClass("templating.taglibs.core.IncludeNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=raptor.require("json.stringify").stringify,n=function(e){n.superclass.constructor.call(this),e&&this.setProperties(e)};return n.prototype={doGenerateCode:function(e){var n=this.getProperty("template"),r;if(n){this.removeProperty("template");var i=[];this.forEachPropertyNS("",function(e,n){i.push(t(e)+": "+n)},this);var s="context.i("+n+",{"+i.join(",")+"});\n";e.addJavaScriptCode(s)}else if(r=this.getAttribute("resource")){var o=this.getProperty("static")!==!1;if(o){var u=raptor.require("resources").findResource(r);if(!u.exists()){this.addError('"each" attribute is required');return}e.addWrite(raptor.require("json.stringify").stringify(u.readFully()))}}else this.addError('"template" or "resource" attribute is required')}},n});
raptor.defineClass("templating.taglibs.core.OtherwiseNode","templating.compiler.Node",function(e){"use strict";var t=e.require("strings"),n=function(e){n.superclass.constructor.call(this),e&&this.setProperties(e)};return n.prototype={doGenerateCode:function(e){e.addJavaScriptCode(" else {\n",!1),this.generateCodeForChildren(e,!0),e.addJavaScriptCode("}\n\n")},toString:function(){return"<c:otherwise>"}},n});
raptor.defineClass("templating.taglibs.core.WhenNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=function(e){t.superclass.constructor.call(this),e&&this.setProperties(e)};return t.prototype={doGenerateCode:function(e){var t=this.getProperty("test");t||(console.error("WHEN NODE: ",this.properties),this.addError('"test" attribute is required for '+this.toString()+" tag.")),this.firstWhen||e.addJavaScriptCode(" else "),e.addJavaScriptCode("if ("+t+") {\n"),this.generateCodeForChildren(e,!0),e.addJavaScriptCode("}")}},t});
raptor.defineClass("templating.taglibs.core.WithNode","templating.compiler.Node",function(e){"use strict";var t=e.errors,n=e.require("templating.compiler.AttributeSplitter"),r=/^[A-Za-z_][A-Za-z0-9_]*$/,i=function(e){i.superclass.constructor.call(this),e&&this.setProperties(e)};return i.prototype={doGenerateCode:function(t){var i=this.getProperty("vars"),s=this;i||this.addError('"vars" attribute is required');var o=n.parse(i,{"*":{type:"expression"}},{ordered:!0,errorHandler:function(e){s.addError('Invalid variable declarations of "'+i+'". Error: '+e)}}),u=[];e.forEach(o,function(e,n){r.test(e.name)||this.addError('Invalid variable name of "'+e.name+'" in "'+i+'"'),u.push((n>0?t.indent(1)+"    ":"")+e.name+(e.value?"="+e.value:"")+(n<o.length-1?",\n":";\n\n"))},this),t.addJavaScriptCode("(function() {\n"),t.incIndent(),t.addJavaScriptCode("var "+u.join("")),this.generateCodeForChildren(t),t.decIndent(),t.addJavaScriptCode("}());\n")}},i});
$rset("resource","/templating/taglibs/core/core.rtld",'<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    \n    <uri>http://raptorjs.org/templates/core</uri>\n    <short-name>core</short-name>\n    <prefix>c</prefix>\n    \n    <tag id="template">\n        \n        <name>template</name> \n        \n        <attribute>\n            <name>name</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>params</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>imports</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <uri>*</uri>\n            <name>functions</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <compiler-class>templating.taglibs.core.TemplateNode</compiler-class>\n    </tag>\n    \n    <tag extends="template">\n    \n        <uri></uri>\n        <name>template</name>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <attribute>\n            <name>for</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <attribute>\n            <name>if</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>attrs</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>when</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>otherwise</name>\n            <type>empty</type>\n        </attribute>\n        \n        <attribute>\n            <name>parseBodyText</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>strip</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>bodyContent</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>replace</name>\n            <type>expression</type>\n        </attribute>\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.core.CoreTagTransformer</class-name>\n        </transformer>\n    </tag>\n    \n    \n    \n    <tag>\n        \n        <name>for</name> \n\n        <compiler-class>templating.taglibs.core.ForNode</compiler-class>\n        \n        <attribute>\n            <name>each</name>\n            <required>true</required>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>separator</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>varStatus</name>\n            <type>identifier</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>forLoop</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>write</name> \n\n        <compiler-class>templating.taglibs.core.WriteNode</compiler-class>\n        \n        <attribute>\n            <name>value</name>\n            <required>true</required>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>escapeXml</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>if</name> \n\n        <compiler-class>templating.taglibs.core.IfNode</compiler-class>\n\n        <attribute>\n            <name>test</name>\n            <type>expression</type>\n        </attribute>\n\n    </tag>\n    \n    <tag>\n        \n        <name>invoke</name> \n\n        <compiler-class>templating.taglibs.core.InvokeNode</compiler-class>\n\n        <attribute>\n            <name>function</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n            <required>true</required>\n        </attribute>\n\n        <attribute>\n            <name>*</name>\n            <uri></uri>\n            <type>string</type>\n            <allow-expressions>true</allow-expressions>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>choose</name> \n\n        <compiler-class>templating.taglibs.core.ChooseNode</compiler-class>\n\n    </tag>\n\n    <tag>\n        \n        <name>when</name> \n\n        <compiler-class>templating.taglibs.core.WhenNode</compiler-class>\n\n        <attribute>\n            <name>test</name>\n            <type>expression</type>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>otherwise</name> \n\n        <compiler-class>templating.taglibs.core.OtherwiseNode</compiler-class>\n\n    </tag>\n        \n    <tag>\n        \n        <name>def</name> \n\n        <compiler-class>templating.taglibs.core.DefNode</compiler-class>\n\n        <attribute>\n            <name>function</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>with</name> \n\n        <compiler-class>templating.taglibs.core.WithNode</compiler-class>\n\n        <attribute>\n            <name>vars</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>include</name> \n\n        <compiler-class>templating.taglibs.core.IncludeNode</compiler-class>\n\n        <attribute>\n            <name>template</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>resource</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>static</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <dynamic-attributes>true</dynamic-attributes>\n        \n    </tag>\n    \n    <text-transformer>\n        <class-name>templating.taglibs.core.CoreTextTransformer</class-name>\n    </text-transformer>\n    \n</raptor-taglib>'),$radd("rtld","/templating/taglibs/core/core.rtld");
raptor.defineClass("templating.taglibs.html.HtmlTagTransformer",function(){"use strict";return{process:function(e,t){if(e.isElementNode()){var n=t.options||{},r=n.preserveWhitespace||{},i=n.allowSelfClosing||{},s=n.startTagOnly||{},o=e.uri?e.uri+":"+e.localName:e.localName;r[o]===!0&&e.setPreserveSpace(!0),i[o]===!1&&e.setAllowSelfClosing(!1),t.options.xhtml!==!0&&s[o]===!0&&e.setStartTagOnly(!0)}}}});
$rset("resource","/templating/taglibs/html/html.rtld","<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>html</short-name>\n    <uri>http://raptorjs.org/templates/html</uri>\n\n    <tag>\n        \n        <name>pre</name> \n        <uri></uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.html.HtmlTagTransformer</class-name>\n        </transformer>\n    </tag>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.html.HtmlTagTransformer</class-name>\n        </transformer>\n    </tag>\n    \n</raptor-taglib>"),$radd("rtld","/templating/taglibs/html/html.rtld");
raptor.defineClass("templating.taglibs.widgets.WidgetsTagTransformer",function(e){"use strict";var t="http://raptorjs.org/templates/widgets";return{process:function(e,n,r){var i,s;if(i=e.getPropertyNS(t,"id"))e.removePropertyNS(t,"id"),e.setProperty("widgetContext",r.makeExpression("[widget, "+i+"]"));if(s=e.getAttributeNS(t,"widget")){e.removeAttributeNS(t,"widget");var o=n.createTagHandlerNode(t,"widget");e.parentNode.replaceChild(o,e),o.appendChild(e),o.setProperty("jsClass",s),o.setProperty("widgetContext",r.makeExpression("[widget, "+i+"]"));var u=e.getAttribute("id");u?(u=n.convertType(u,"string",!0),o.setProperty("id",u)):e.setAttribute("id","${widget.elId()}")}}}});
raptor.defineClass("templating.taglibs.widgets.InitWidgetsTag",function(e){"use strict";var t=e.require("widgets");return{process:function(e,n){if(!t.hasWidgets(n))return;var r=e.includeScriptTag!==!1;r&&n.write('<script type="text/javascript">'),t.writeInitWidgetsCode(n,!0),r&&n.write("</script>")}}});
raptor.defineClass("templating.taglibs.widgets.WidgetTag",function(e){"use strict";var t=e.require("widgets");return{process:function(e,n){var r=e.jsClass,i=e.config,s=e.widgetContext,o=e.id,u,a;s&&(u=s[0],a=s[1]);var f=t.addWidget(r,o,a,i,u,n);e.invokeBody(f)}}});
$rset("resource","/templating/taglibs/widgets/widgets.rtld",'<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>widgets</short-name>\n    <uri>http://raptorjs.org/templates/widgets</uri>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <attribute>\n            <name>id</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>widget</name>\n        </attribute>\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.widgets.WidgetsTagTransformer</class-name>\n            <after>templating.taglibs.core.CoreTagTransformer</after>\n        </transformer>\n    </tag>\n    \n    <tag>\n        <name>widget</name>\n        <handler-class>templating.taglibs.widgets.WidgetTag</handler-class>\n        \n        <attribute name="jsClass" type="string"/>\n        \n        <nested-variable name="widget"/>\n        \n        <imported-variable property-name="config" expression="data.widgetConfig"/>\n        <imported-variable property-name="widgetContext" expression="data.widgetContext"/>\n    </tag>\n    \n    <tag>\n        <name>initWidgets</name>\n        <handler-class>templating.taglibs.widgets.InitWidgetsTag</handler-class>\n        \n        <attribute name="includeScriptTag" type="boolean"/>\n    </tag>\n    \n</raptor-taglib>'),$radd("rtld","/templating/taglibs/widgets/widgets.rtld");
$rset("rhtml","taglibs/test/Button",function(e){var t=e.e,n=e.ne,r=e.t,i=r("templating.taglibs.widgets.WidgetTag"),s=e.xa,o=e.x;return function(e,t){var n=e.widget,r=e.buttonAttrs,u=e.label;t.t(i,{jsClass:"taglibs.test.ButtonWidget",widgetContext:e.widgetContext,config:e.widgetConfig},function(e){t.w('<button id="').w(s(e.elId())).w('"'),t.a(r),t.w(">").w(o(u)).w("</button>")})}});
raptor.defineClass("taglibs.test.Button.ButtonTag",function(e){return{process:function(e,t){var n=e.disabled===!0,r={disabled:n?null:undefined,type:e.type||"button"};e.color&&(r.style="background-color: "+e.color),t.renderTemplate("taglibs/test/Button",{label:e.label,widgetContext:e.widgetContext,widgetConfig:{disabled:n},buttonAttrs:r})}}});
$rset("rhtml","taglibs/test/Container",function(e){var t=e.e,n=e.ne,r=e.x;return function(e,t){var n=e.widget,i=e.title;t.w("<div><h1>").w(r(i)).w('</h1><div class="bd">'),e.invokeBody(),t.w("</div></div>")}});
raptor.defineClass("taglibs.test.Container.ContainerTag",function(e){return{process:function(e,t){t.renderTemplate("taglibs/test/Container",{title:e.title,invokeBody:e.invokeBody})}}});
raptor.defineClass("taglibs.test.Greeting.GreetingTag",function(e){var t=function(){};return t.prototype={process:function(e,t){t.write("Hello "+e.name+"!")}},t});
raptor.defineClass("taglibs.test.Tab.TabTag",function(e){var t=function(){};return t.prototype={process:function(e,t){var n=e.tabs;n.addTab(e)}},t});
$rset("rhtml","taglibs/test/Tabs",function(e){var t=e.e,n=e.ne,r=e.f,i=e.xa,s=e.x;return function(e,t){var n=e.tabs;t.w('<div class="tabs"><ul class="nav nav-tabs">'),r(n,function(e){t.w('<li class="').w(i(e.liClass)).w('"><a href="#').w(i(e.id)).w('" data-toggle="tab">').w(s(e.title)).w("</a></li>")}),t.w('</ul><div class="tab-content">'),r(n,function(e){t.w('<div id="').w(i(e.id)).w('" class="').w(i(e.divClass)).w('">'),e.invokeBody(),t.w("</div>")}),t.w("</div></div>")}});
raptor.defineClass("taglibs.test.Tabs.TabsTag",function(e){var t=e.require("templating"),n=function(){};return n.prototype={process:function(n,r){var i=[],s=!1;n.invokeBody({addTab:function(e){e.active&&(e.activeFound=!0),e.id="tab"+i.length,i.push(e)}}),!s&&i.length&&(i[0].active=!0),e.forEach(i,function(e){e.liClass=e.active?"active":"",e.divClass=e.active?"tab-pane active":"tab-pane"}),t.render("taglibs/test/Tabs",{tabs:i},r)}},n});
raptor.define("taglibs.test.TestFunctions",{upperCase:function(e){return e?e.toString().toUpperCase():""},classNames:function(){var e=[];for(var t=0,n=arguments.length,r;t<n;t++)r=arguments[t],r&&e.push(r);return e.join(" ")}});
$rset("resource","/taglibs/test/test.rtld",'<raptor-taglib>\n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>test</short-name>\n    <uri>http://raptorjs.org/templates/test</uri>\n    \n    <import-taglib path="/taglibs/test/Button/Button.rtld"/>\n    <import-taglib path="/taglibs/test/Container/Container.rtld"/>\n    <import-taglib path="/taglibs/test/Greeting/Greeting.rtld"/>\n    <import-taglib path="/taglibs/test/Tab/Tab.rtld"/>\n    <import-taglib path="/taglibs/test/Tabs/Tabs.rtld"/>\n    \n    <function class="taglibs.test.TestFunctions">\n        <name>upperCase</name>\n    </function>\n    \n    <function class="taglibs.test.TestFunctions">\n        <name>classNames</name>\n    </function>\n\n</raptor-taglib>'),$radd("rtld","/taglibs/test/test.rtld");
$rset("resource","/taglibs/test/Button/Button.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>button</name>\n        <handler-class>taglibs.test.Button.ButtonTag</handler-class>\n        \n        <attribute name="label"/>\n        <attribute name="type"/>\n        <attribute name="color"/>\n        <attribute name="disabled" type="boolean"/>\n        <attribute name="id" uri="widgets" type="string"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Container/Container.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>container</name>\n        <handler-class>taglibs.test.Container.ContainerTag</handler-class>\n        \n        <attribute name="title"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Greeting/Greeting.rtld","<raptor-taglib>\n\n    <tag>\n        <name>greeting</name>\n        <handler-class>taglibs.test.Greeting.GreetingTag</handler-class>\n        <attribute>\n            <name>name</name>\n        </attribute>\n        <attribute>\n            <name>adult</name>\n            <type>boolean</type>\n        </attribute>\n    </tag>\n    \n</raptor-taglib>");
$rset("resource","/taglibs/test/Tab/Tab.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>tab</name>\n        <handler-class>taglibs.test.Tab.TabTag</handler-class>\n        \n        <attribute name="title"/>\n        \n        <imported-variable property-name="tabs" expression="tabs"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Tabs/Tabs.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>tabs</name>\n        <handler-class>taglibs.test.Tabs.TabsTag</handler-class>\n        <nested-variable name="tabs"/>\n    </tag>\n    \n</raptor-taglib>');
raptor.define("components.buttons.Button.ButtonWidget",function(e){var t=function(e){var t=this;this.toggled=!1,this.jqueryButton=this.$(),this._toggle=e.toggle,e.toggled&&this.toggle(),this.$().click(function(){t.publish("click",{button:this}),t._toggle&&t.toggle()})};return t.events=["click","toggle"],t.prototype={toggle:function(){this.toggled=!this.toggled,this.jqueryButton.button("toggle"),this.publish("toggle",{button:this})}},t});
!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery);
raptor.define("components.nav.Nav.NavWidget",function(e){var t=function(e){var t=this;this.$("LI").click(function(){t.publish("navItemClick",{el:this,nav:t})})};return t.events=["navItemClick"],t.prototype={},t});
raptor.define("components.templates.Errors.ErrorsWidget",function(e){var t=function(e){this._hasErrors=!1};return t.prototype={setErrors:function(e){e&&e.length?(this.$("#ul").empty(),this.addErrors(e)):(this._hasErrors=!1,this.$("#ul").hide().empty())},clearErrors:function(){this.setErrors(null)},hasErrors:function(){return this._hasErrors},addErrors:function(t){if(t&&t.length){this._hasErrors=!0;var n=this.getEl("ul");e.forEach(t,function(t){var r=document.createElement("LI");r.innerHTML=e.require("templating").renderToString("components/templates/Errors-error",{message:t.message}),n.appendChild(r)},this),this.$("#ul").show()}}},t});
$rset("rhtml","components/templates/Errors-error",function(e){var t=e.e,n=e.ne,r=e.x;return function(e,t){var n=e.message;t.w('<span class="x">✘</span><pre class="message">').w(r(n)).w("</pre>")}});
raptor.define("components.templates.TemplateTestbed.TemplateTestbedWidget",function(raptor){var stringify=raptor.require("json.stringify").stringify,TemplateTestbedWidget=function(e){this.samples=e.samples,this.autoRender=!0,this.compileRequired=!0,this.dataModified=!0,this.optionsModified=!0,this.renderRequired=!0,this.optionsVisible=!1,this.defaultOptionsJson=stringify(raptor.require("templating.compiler").defaultOptions),this.loadSample(0),this.renderButton.subscribe("click",function(e){this.update()},this),this.showCompiledToggleButton.subscribe("toggle",function(e){this.toggleCompiledOutput()},this),this.showOptionsToggleButton.subscribe("toggle",function(e){this.toggleCompilerOptions()},this),this.autoRenderToggleButton.subscribe("toggle",function(e){this.autoRender=!this.autoRender},this),this.templateEditor.subscribe("change",function(){this.compileRequired=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),this.dataEditor.subscribe("change",function(){this.dataModified=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),this.optionsEditor.subscribe("change",function(){this.optionsModified=!0,this.compileRequired=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),this.samplesNav.subscribe("navItemClick",function(e){var t=$(e.el).data("sample");this.loadSample(t)},this)};return TemplateTestbedWidget.prototype={loadSample:function(e){var t=this.samples[e];t.templatesLoaded||(raptor.forEach(t.templates,function(e){raptor.require("templating.compiler").compileAndLoad(e.source,e.path)},this),t.templatesLoaded=!0),this.templateEditor.setValue(t.template),this.dataEditor.setValue(t.data),this.optionsEditor.setValue(t.options||this.defaultOptionsJson),this.update(),t.showCompilerOptions&&this.toggleCompilerOptions(!0)},handleEditorException:function(e,t){var n=t.errors;n||(n=[{message:t.toString()}]),e.addErrors(n)},update:function(){this.updateJson("compilerOptions","optionsModified",this.optionsEditor,this.optionsErrors),this.compileTemplate(),this.updateJson("templateData","dataModified",this.dataEditor,this.dataErrors),this.renderTemplate()},compileTemplate:function(){if(!this.compilerOptions)return;if(!this.compileRequired)return;this.templateName=null;var templateSrc=this.templateEditor.getValue(),compiler=raptor.require("templating.compiler"),compiledSrc;this.templateErrors.clearErrors();var templateDom;try{templateDom=raptor.require("xml.dom").createParser().parse(templateSrc)}catch(e){this.handleEditorException(this.templateErrors,"Invalid XML")}if(templateDom)try{var compilerOptions=raptor.extend({defaultTemplateName:"test",nameCallback:function(e){templateName=e}},this.compilerOptions);compiledSrc=compiler.compile(templateDom,"test",compilerOptions)}catch(e){this.handleEditorException(this.templateErrors,e)}if(compiledSrc){this.compiledEditor.setValue(compiledSrc),raptor.require("templating").unload(templateName);try{eval(compiledSrc),this.templateName=templateName}catch(e){this.handleEditorException(this.templateErrors,e)}}else this.compiledEditor.setValue("");this.compileRequired=!1},updateJson:function(targetProp,modifiedProp,editor,errors){if(!this[modifiedProp])return;this[targetProp]=null,errors.clearErrors();var jsonData=editor.getValue(),data;try{data=eval("("+jsonData+")"),this[targetProp]=data}catch(e){this.handleEditorException(errors,e)}this[modifiedProp]=!1},renderTemplate:function(){if(!this.renderRequired)return;if(this.templateData&&this.templateName&&this.compilerOptions)try{var e=raptor.require("templating").renderToString(this.templateName,this.templateData);this.outputEditor.setValue(e),this.$("#htmlViewer").html(e)}catch(t){this.handleEditorException(this.templateErrors,t),this.outputEditor.setValue(""),this.$("#htmlViewer").html("")}else this.outputEditor.setValue(""),this.$("#htmlViewer").html("");this.renderRequired=!1},toggleCompiledOutput:function(){this.$("#compiledTemplateSection").toggle()},toggleCompilerOptions:function(e){if(arguments.length===1&&e===this.visible)return;this.optionsVisible=!this.optionsVisible,this.optionsVisible?this.$("#compilerOptionsSection").removeClass("compiler-options-hidden"):this.$("#compilerOptionsSection").addClass("compiler-options-hidden")}},TemplateTestbedWidget});