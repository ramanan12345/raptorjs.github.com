!function(e){"use strict";var t=function(e,t){this.init("tooltip",e,t)};t.prototype={constructor:t,init:function(t,n,r){var i,s;this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.enabled=!0,this.options.trigger!="manual"&&(i=this.options.trigger=="hover"?"mouseenter":"focus",s=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(i,this.options.selector,e.proxy(this.enter,this)),this.$element.on(s,this.options.selector,e.proxy(this.leave,this))),this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},getOptions:function(t){return t=e.extend({},e.fn[this.type].defaults,t,this.$element.data()),t.delay&&typeof t.delay=="number"&&(t.delay={show:t.delay,hide:t.delay}),t},enter:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);if(!n.options.delay||!n.options.delay.show)return n.show();clearTimeout(this.timeout),n.hoverState="in",this.timeout=setTimeout(function(){n.hoverState=="in"&&n.show()},n.options.delay.show)},leave:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);this.timeout&&clearTimeout(this.timeout);if(!n.options.delay||!n.options.delay.hide)return n.hide();n.hoverState="out",this.timeout=setTimeout(function(){n.hoverState=="out"&&n.hide()},n.options.delay.hide)},show:function(){var e,t,n,r,i,s,o;if(this.hasContent()&&this.enabled){e=this.tip(),this.setContent(),this.options.animation&&e.addClass("fade"),s=typeof this.options.placement=="function"?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,t=/in/.test(s),e.remove().css({top:0,left:0,display:"block"}).appendTo(t?this.$element:document.body),n=this.getPosition(t),r=e[0].offsetWidth,i=e[0].offsetHeight;switch(t?s.split(" ")[1]:s){case"bottom":o={top:n.top+n.height,left:n.left+n.width/2-r/2};break;case"top":o={top:n.top-i,left:n.left+n.width/2-r/2};break;case"left":o={top:n.top+n.height/2-i/2,left:n.left-r};break;case"right":o={top:n.top+n.height/2-i/2,left:n.left+n.width}}e.css(o).addClass(s).addClass("in")}},isHTML:function(e){return typeof e!="string"||e.charAt(0)==="<"&&e.charAt(e.length-1)===">"&&e.length>=3||/^(?:[^<]*<[\w\W]+>[^>]*$)/.exec(e)},setContent:function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.isHTML(t)?"html":"text"](t),e.removeClass("fade in top bottom left right")},hide:function(){function r(){var t=setTimeout(function(){n.off(e.support.transition.end).remove()},500);n.one(e.support.transition.end,function(){clearTimeout(t),n.remove()})}var t=this,n=this.tip();n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?r():n.remove()},fixTitle:function(){var e=this.$element;(e.attr("title")||typeof e.attr("data-original-title")!="string")&&e.attr("data-original-title",e.attr("title")||"").removeAttr("title")},hasContent:function(){return this.getTitle()},getPosition:function(t){return e.extend({},t?{top:0,left:0}:this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||(typeof n.title=="function"?n.title.call(t[0]):n.title),e},tip:function(){return this.$tip=this.$tip||e(this.options.template)},validate:function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()}},e.fn.tooltip=function(n){return this.each(function(){var r=e(this),i=r.data("tooltip"),s=typeof n=="object"&&n;i||r.data("tooltip",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.tooltip.Constructor=t,e.fn.tooltip.defaults={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0}}(window.jQuery);
!function(e){"use strict";var t=function(e,t){this.init("popover",e,t)};t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype,{constructor:t,setContent:function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.isHTML(t)?"html":"text"](t),e.find(".popover-content > *")[this.isHTML(n)?"html":"text"](n),e.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-content")||(typeof n.content=="function"?n.content.call(t[0]):n.content),e},tip:function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip}}),e.fn.popover=function(n){return this.each(function(){var r=e(this),i=r.data("popover"),s=typeof n=="object"&&n;i||r.data("popover",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.popover.Constructor=t,e.fn.popover.defaults=e.extend({},e.fn.tooltip.defaults,{placement:"right",content:"",template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery);
raptor.define("components.overlays.Popover.PopoverWidget",function(e){return{initWidget:function(e){$("#"+e.elId).popover(e)}}});
raptor.defineClass("templating.taglibs.core.CoreTagTransformer",function(e){"use strict";var t=e.extend,n="http://raptorjs.org/templates/core",r=e.require("templating.taglibs.core.WriteNode"),i=e.require("templating.taglibs.core.ForNode"),s=e.require("templating.taglibs.core.IfNode"),o=e.require("templating.taglibs.core.ElseIfNode"),u=e.require("templating.taglibs.core.ElseNode"),a=e.require("templating.taglibs.core.WithNode"),f=e.require("templating.taglibs.core.WhenNode"),l=e.require("templating.taglibs.core.OtherwiseNode"),c=e.require("templating.taglibs.core.TagHandlerNode"),h=e.require("templating.compiler.Expression"),p=e.require("templating.compiler.AttributeSplitter"),d=e.require("templating.compiler.TypeConverter"),v=function(e,t,n){return d.convert(e,t,n)};return{process:function(d,m,g){this.findNestedAttrs(d,m,g);var y,b,w,E,S,x,T,N,C,k,L,A,O,M=function(e,t){d.forEachAttributeAnyNS(function(n){if(n.uri==="http://www.w3.org/2000/xmlns/"||n.uri==="http://www.w3.org/XML/1998/namespace"||n.prefix=="xmlns")return;var r=n.prefix,i=n.prefix&&n.uri!=A.getTaglibUri()?n.uri:null,s=m.taglibs.getAttribute(L,d.localName,i,n.localName),o=s?s.type||"string":"string",u;n.uri===A.getTaglibUri()&&(r="");var a=m.taglibs.isTaglib(n.uri);if(!s&&(a||!A.dynamicAttributes)){d.addError('The tag "'+A.name+'" in taglib "'+A.getTaglibUri()+'" does not support attribute "'+n+'"');return}if(n.value instanceof h)u=n.value;else try{u=v(n.value,o,s?s.allowExpressions!==!1:!0)}catch(f){d.addError('Invalid attribute value of "'+n.value+'" for attribute "'+n.name+'": '+f.message),u=n.value}e.call(t,i,s&&s.targetProperty||n.localName,u,r,s)},this)};L=d.uri,!L&&d.isRoot()&&d.localName==="template"&&(L=n);if(d.parentNode){var _=d.parentNode.uri,D=d.parentNode.localName;O=m.taglibs.getNestedTag(_,D,L,d.localName);if(O){d.setWordWrapEnabled(!1),d.parentNode.setProperty(O.targetProperty,d.getBodyContentExpression(g)),d.detach();return}}A=m.taglibs.getTag(L,d.localName),(d.getAttributeNS(n,"space")==="preserve"||d.getAttributeNS(n,"whitespace")==="preserve")&&d.setPreserveWhitespace(!0),d.removeAttributeNS(n,"space"),d.removeAttributeNS(n,"whitespace"),(T=d.getAttributeNS(n,"parse-body-text"))!=null&&(d.removeAttributeNS(n,"parse-body-text"),d.parseBodyText=T!=="false");if((S=d.getAttributeNS(n,"when"))!=null){d.removeAttributeNS(n,"when");var P=new f({test:new h(S),pos:d.getPosition()});d.parentNode.replaceChild(P,d),P.appendChild(d)}if(d.getAttributeNS(n,"otherwise")!=null){d.removeAttributeNS(n,"otherwise");var H=new l({pos:d.getPosition()});d.parentNode.replaceChild(H,d),H.appendChild(d)}(E=d.getAttributeNS(n,"attrs"))!=null&&(d.removeAttributeNS(n,"attrs"),d.dynamicAttributesExpression=E);if((y=d.getAttributeNS(n,"for"))!=null){d.removeAttributeNS(n,"for");var B=p.parse(y,{each:{type:"custom"},separator:{type:"expression"},"status-var":{type:"identifier"},"for-loop":{type:"boolean",allowExpressions:!1}},{defaultName:"each",errorHandler:function(e){d.addError('Invalid c:for attribute of "'+y+'". Error: '+e)}});B.pos=d.getPosition();var j=new i(B);d.parentNode.replaceChild(j,d),j.appendChild(d)}if((b=d.getAttributeNS(n,"if"))!=null){d.removeAttributeNS(n,"if");var F=new s({test:new h(b),pos:d.getPosition()});d.parentNode.replaceChild(F,d),F.appendChild(d)}if((w=d.getAttributeNS(n,"else-if"))!=null){d.removeAttributeNS(n,"else-if");var I=new o({test:new h(w),pos:d.getPosition()});d.parentNode.replaceChild(I,d),I.appendChild(d)}if(d.getAttributeNS(n,"else")!=null){d.removeAttributeNS(n,"else");var q=new u({pos:d.getPosition()});d.parentNode.replaceChild(q,d),q.appendChild(d)}if((x=d.getAttributeNS(n,"with"))!=null){d.removeAttributeNS(n,"with");var R=new a({vars:x,pos:d.getPosition()});d.parentNode.replaceChild(R,d),R.appendChild(d)}if((C=d.getAttributeNS(n,"bodyContent")||d.getAttributeNS(n,"content"))!=null){d.removeAttributeNS(n,"bodyContent"),d.removeAttributeNS(n,"content");var U=new r({expression:C,pos:d.getPosition()});d.removeChildren(),d.appendChild(U)}d.getAttributeNS&&(N=d.getAttributeNS(n,"strip"))!=null&&(d.removeAttributeNS(n,"strip"),d.setStripExpression||d.addError("The c:strip directive is not allowed for target node"),d.setStripExpression(N));if(d.getAttributeNS&&(k=d.getAttributeNS(n,"replace"))!=null){d.removeAttributeNS(n,"replace");var z=new r({expression:k,pos:d.getPosition()});d.parentNode.replaceChild(z,d),d=z}if(A){A.preserveWhitespace&&d.setPreserveWhitespace(!0);if(A.handlerClass)c.convertNode(d,A),M(function(e,t,n,r,i){i?d.setPropertyNS(e,t,n):d.addDynamicAttribute(r?r+":"+t:t,n)});else if(A.nodeClass){var W=e.require(A.nodeClass);t(d,W.prototype),W.call(d),d.setNodeClass(W),M(function(e,t,n){d.setPropertyNS(e,t,n)})}}else L&&m.taglibs.isTaglib(L)&&d.addError("Tag "+d.toString()+' is not allowed for taglib "'+L+'"')},findNestedAttrs:function(e,t,r){e.forEachChild(function(e){e.uri===n&&e.localName==="attr"&&this.handleAttr(e,t,r)},this)},handleAttr:function(t,n,r){var i=t.parentNode;if(!i.isElementNode()){t.addError(this.toString()+" tag is not nested within an element tag.");return}var s=t.hasAttribute("value"),o=t.getAttribute("name"),u=t.getAttribute("value"),a=t.getAttribute("uri")||"",f=t.getAttribute("prefix")||"";if(i.hasAttributeNS(a,o)){t.addError(t.toString()+' tag adds duplicate attribute with name "'+o+'"'+(a?' and URI "'+a+'"':""));return}t.removeAttribute("name"),t.removeAttribute("value"),t.removeAttribute("uri"),t.removeAttribute("prefix");if(t.hasAttributesAnyNS()){var l=t.getAllAttributes().map(function(e){return e.qName});t.addError("Invalid attributes for tag "+t.toString()+": "+l.join(", "));return}t.detach(),n.transformTree(t,r),s?i.setAttributeNS(a,o,u,f):(t.setEscapeXmlContext(e.require("templating.compiler.EscapeXmlContext").Attribute),i.setAttributeNS(a,o,t.getBodyContentExpression(r),f,!1))}}});
raptor.defineClass("templating.taglibs.core.ElseTagTransformer",function(e){"use strict";var t=e.require("strings");return{process:function(e,n){var r=e.previousSibling,i,s=n.getNodeClass("http://raptorjs.org/templates/core","if"),o=n.getNodeClass("http://raptorjs.org/templates/core","else-if"),u=[];while(r){if(r.getNodeClass()===o||r.getNodeClass()===s){i=r;break}if(!r.isTextNode()){e.addError(r+" is not allowed before "+e.toString()+" tag.");return}if(!t.isEmpty(r.getText())){e.addError('Static text "'+t.trim(r.getText())+'" is not allowed before '+e.toString()+" tag.");return}u.push(r),r=r.previousSibling}if(!i){e.addError("<c:if> or <c:else-if> node not found immediately before "+e.toString()+" tag.");return}u.forEach(function(e){e.parentNode.removeChild(e)}),i.hasElse=!0,e.valid=!0}}});
raptor.defineClass("templating.taglibs.core.CoreTextTransformer",function(){"use strict";var e=raptor.require("templating.compiler.ExpressionParser"),t=raptor.require("templating.compiler.TextNode"),n=raptor.require("templating.taglibs.core.WriteNode"),r=raptor.require("templating.taglibs.core.ScriptletNode");return{process:function(i,s){if(i.parentNode&&i.parentNode.parseBodyText===!1)return;var o=[];e.parse(i.text,{text:function(e,t){o.push({text:e,escapeXml:t})},expression:function(e,t){o.push({expression:e,escapeXml:t})},scriptlet:function(e){o.push({scriptlet:e})},error:function(e){i.addError(e)}},this);if(o.length>0){var u=0;o[0].text?(i.setText(o[0].text),i.setEscapeXml(o[0].escapeXml!==!1),u=1):(i.text="",u=0);var a=[];for(var f=u,l,c;f<o.length;f++)l=o[f],c=null,l.hasOwnProperty("text")?(c=new t(l.text,l.escapeXml!==!1),c.setTransformerApplied(this)):l.hasOwnProperty("expression")?c=new n({expression:l.expression,escapeXml:l.escapeXml!==!1}):l.hasOwnProperty("scriptlet")&&(c=new r(l.scriptlet)),c&&(c.setPosition(i.getPosition()),a.push(c));a.length&&i.parentNode.insertAfter(a,i)}}}});
raptor.defineClass("templating.taglibs.core.ForNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=/^(.+)\s+in\s+(.+)$/,n=raptor.require("json.stringify").stringify,r=function(e){var n=e.match(t);if(!n)throw new Error('Invalid each attribute of "'+e+'"');return{"var":n[1],"in":n[2]}},i=function(e){i.superclass.constructor.call(this),e&&this.setProperties(e)};return i.prototype={doGenerateCode:function(e){var t=this.getProperty("each"),i=this.getProperty("separator"),s=this.getProperty("status-var")||this.getProperty("varStatus");if(!t){this.addError('"each" attribute is required'),this.generateCodeForChildren(e);return}var o;try{o=r(t)}catch(u){this.addError(u.message),this.generateCodeForChildren(e);return}var a=e.makeExpression(o["in"]),f=o["var"];i&&!s&&(s="__loop");var l;s?(l=[f,s],e.statement(e.getStaticHelperFunction("forEachWithStatusVar","fv")+"("+a+", function("+l.join(",")+") {").indent(function(){this.generateCodeForChildren(e),i&&e.statement("if (!"+s+".isLast()) {").indent(function(){e.write(e.isExpression(i)?i.getExpression():n(i))},this).line("}")},this).line("});")):this.getProperty("for-loop")===!0?(l=["__array","__index","__length",f],e.statement(e.getStaticHelperFunction("forLoop","fl")+"("+a+", function("+l.join(",")+") {").indent(function(){e.statement("for (;__index<__length;__index++) {").indent(function(){e.statement(f+"=__array[__index];"),this.generateCodeForChildren(e)},this).line("}"),this.generateCodeForChildren(e)},this).line("});")):(l=[f],e.statement(e.getStaticHelperFunction("forEach","f")+"("+a+", function("+l.join(",")+") {").indent(function(){this.generateCodeForChildren(e)},this).line("});"))}},i});
raptor.defineClass("templating.taglibs.core.IfNode","templating.compiler.Node",function(){"use strict";var e=function(t){e.superclass.constructor.call(this),t&&this.setProperties(t)};return e.prototype={doGenerateCode:function(e){var t=this.getProperty("test");t||this.addError('"test" attribute is required'),e.statement("if ("+t+") {").indent(function(){this.generateCodeForChildren(e)},this).line("}")}},e});
raptor.defineClass("templating.taglibs.core.ElseIfNode","templating.compiler.ElementNode",function(){"use strict";var e=function(t){e.superclass.constructor.call(this,"http://raptorjs.org/templates/core","else-if","c"),t&&this.setProperties(t)};return e.prototype={doGenerateCode:function(e){var t=this.getProperty("test");if(!t){this.addError('"test" attribute is required');return}e.line("else if ("+t+") {").indent(function(){this.generateCodeForChildren(e)},this).line("}")}},e});
raptor.defineClass("templating.taglibs.core.ElseNode","templating.compiler.ElementNode",function(){"use strict";var e=raptor.require("strings"),t=function(e){t.superclass.constructor.call(this,"else","http://raptorjs.org/templates/core","c"),e&&this.setProperties(e)};return t.prototype={doGenerateCode:function(e){if(this.valid==null)return;e.line("else {").indent(function(){this.generateCodeForChildren(e)},this).line("}")}},t});
raptor.defineClass("templating.taglibs.core.TagHandlerNode","templating.compiler.Node",function(e){"use strict";var t=e.extend,n=e.require("objects"),r=e.forEach,i=e.require("json.stringify").stringify,s=e.forEachEntry,o=e.require("templating.compiler.Expression"),u=function(e,t){var n=e._handlerVars||(e._handlerVars={}),r=n[t];return r||(n[t]=r=t.replace(/[.\-]/g,"_"),e.addStaticVar(r,e.getStaticHelperFunction("getTagHandler","t")+"("+i(t)+")")),r},a=function(e,t){var n=[];return e?(s(e,function(e,r){if(r instanceof o){var s;t.indent(function(){s=r.expression.toString()}),n.push(t.indentStr(1)+i(e)+": "+s)}else typeof r=="string"||typeof r=="object"?n.push(t.indentStr(1)+i(e)+": "+i(r)):n.push(t.indentStr(1)+i(e)+": "+r)}),n.length?"{\n"+n.join(",\n")+"\n"+t.indentStr()+"}":"{}"):"{}"},f=function(e){this.nodeType||f.superclass.constructor.call(this),this.tag=e,this.dynamicAttributes=null};return f.convertNode=function(e,n){t(e,f.prototype),f.call(e,n)},f.prototype={addDynamicAttribute:function(e,t){this.dynamicAttributes||(this.dynamicAttributes={}),this.dynamicAttributes[e]=t},doGenerateCode:function(t){var i=u(t,this.tag.handlerClass);r(this.tag.importedVariables,function(e){this.setProperty(e.targetProperty,new o(e.expression))},this);var f=e.extend({},this.getPropertiesByNS());delete f[""];var l=!n.isEmpty(f),c=this;t.contextMethodCall("t",function(){t.code("\n").indent(function(){t.line(i+",").indent().code(a(c.getProperties(),t));if(c.hasChildren()){var e=[];r(c.tag.nestedVariables,function(t){e.push(t.name)}),t.code(",\n").line("function("+e.join(",")+") {").indent(function(){c.generateCodeForChildren(t)}).indent().code("}")}else(l||c.dynamicAttributes)&&t.code(",\n").indent().code("null");c.dynamicAttributes?t.code(",\n").indent().code(a(c.dynamicAttributes,t)):l&&t.code(",\n").indent().code("null"),l&&t.code(",\n").line("{").indent(function(){var e=!0;s(f,function(n,r){e||t.code(",\n"),t.code(t.indentStr()+'"'+n+'": '+a(r,t)),e=!1})}).indent().code("}")})})}},f});
raptor.defineClass("templating.taglibs.core.TemplateNode","templating.compiler.Node",function(){"use strict";var e=raptor.forEach,t=function(e){t.superclass.constructor.call(this),e&&this.setProperties(e)};return t.prototype={doGenerateCode:function(t){var n=this.getProperty("name"),r=this.getProperty("params"),i=function(e){var n=e.replace(/[^a-zA-Z0-9]+/g,"_");return t.hasStaticVar(n)||t.addStaticVar(n,JSON.stringify(e)),n},s;r?(r=r.split(/\s*,\s*/g),e(r,function(e){t.addVar(e,"data."+e)},this)):r=null,this.forEachProperty(function(n,r,o){n||(n=this.uri),r==="functions"&&e(o.split(/\s*[,;]\s*/g),function(e){var r=t.compiler.taglibs.getFunction(n,e);r?(s=i(r.functionClass),r.bindToContext===!0?t.addVar(e,"context.h("+s+","+JSON.stringify(e)+")"):t.addStaticVar(e,t.getStaticHelperFunction("getHelper","h")+"("+s+","+JSON.stringify(e)+")")):this.addError('Function with name "'+e+'" not found in taglib "'+n+'"')},this)},this),n?t.setTemplateName(n):t.getTemplateName()||this.addError('The "name" attribute is required for the '+this.toString()+" tag or it must be passed in as a compiler option."),this.generateCodeForChildren(t)}},t});
raptor.defineClass("templating.taglibs.core.WriteNode","templating.compiler.Node",function(){"use strict";var e=raptor.require("xml.utils").escapeXmlAttr,t=raptor.require("templating.compiler.EscapeXmlContext"),n=function(e){n.superclass.constructor.call(this,"write"),e&&this.setProperties(e)};return n.prototype={doGenerateCode:function(e){var n=this.getExpression(),r;this.hasProperty("escapeXml")?r=this.getProperty("escapeXml")!==!1:r=this.getProperty("escape-xml")!==!1,r===!0&&(this.getEscapeXmlContext()===t.Attribute?n=e.getStaticHelperFunction("escapeXmlAttr","xa")+"("+n+")":n=e.getStaticHelperFunction("escapeXml","x")+"("+n+")"),n&&e.write(n)},getExpression:function(){return this.getProperty("expression")||this.getProperty("value")||this.getAttribute("expression")||this.getAttribute("value")},toString:function(){return'<c:write expression="'+this.getExpression()+'">'}},n});
raptor.defineClass("templating.taglibs.core.InvokeNode","templating.compiler.Node",function(){"use strict";var e=raptor.forEach,t=function(e){t.superclass.constructor.call(this),e&&this.setProperties(e)};return t.prototype={doGenerateCode:function(t){var n=this.getProperty("function"),r,i=t.getAttribute("core:definedFunctions");n||this.addError('"function" attribute is required');if(n.indexOf("(")===-1){r=i?i[n]:null;var s=[],o={},u=[];r&&(u=r.params||[],e(u,function(e){o[e]=!0},this)),this.forEachPropertyNS("",function(e,t){if(e==="function")return;o[e]||this.addError('Parameter with name "'+e+'" not supported for function with name "'+n+'". Allowed parameters: '+u.join(", "))},this),e(u,function(e){o[e]=!0;var t=this.getAttribute(e);t==null?s.push("undefined"):s.push(this.getProperty(e))},this),t.write(n+"("+s.join(",")+")")}else{var a=n.substring(0,n.indexOf("("));r=i?i[a]:null,r?t.write(n):t.statement(n+";\n")}}},t});
raptor.defineClass("templating.taglibs.core.ScriptletNode","templating.compiler.Node",function(){"use strict";var e=function(t){e.superclass.constructor.call(this,"scriptlet"),this.code=t};return e.prototype={doGenerateCode:function(e){this.code&&e.code(this.code)},toString:function(){return"{%"+this.code+"%}"}},e});
raptor.defineClass("templating.taglibs.core.ChooseNode","templating.compiler.Node",function(e){"use strict";var t=e.require("strings"),n=e.require("templating.taglibs.core.WhenNode"),r=e.require("templating.taglibs.core.OtherwiseNode"),i=function(e){i.superclass.constructor.call(this)};return i.prototype={doGenerateCode:function(e){var i=null,s=!1,o=[];this.forEachChild(function(u){if(u.isTextNode())t.isEmpty(u.getText())||this.addError('Static text "'+t.trim(u.getText())+'" is not allowed in '+this.toString()+" tag.");else if(u.getNodeClass()===n){if(i){this.addError(i+" tag must be last child of tag "+this+".");return}s||(s=!0,u.firstWhen=!0),o.push(u)}else if(u.getNodeClass()===r){if(i){this.addError("More than one "+i+" tag is not allowed as child of tag "+this+".");return}i=u,o.push(i)}else this.addError(u+" tag is not allowed as child of tag "+this+"."),u.generateCode(e)},this),o.forEach(function(t,n){t.hasElse=n<o.length-1,t.generateCode(e)}),s||this.addError(""+i+" tag is required to have at least one sibling <c:when> tag.")}},i});
raptor.defineClass("templating.taglibs.core.DefNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=raptor.require("strings"),n=/^([A-Za-z_][A-Za-z0-9_]*)\(((?:[A-Za-z_][A-Za-z0-9_]*,\s*)*[A-Za-z_][A-Za-z0-9_]*)?\)$/,r=function(e){r.superclass.constructor.call(this),e&&this.setProperties(e)};return r.prototype={doGenerateCode:function(e){var r=this.getProperty("function");if(!r){this.addError('"function" attribute is required'),this.generateCodeForChildren(e);return}r=t.trim(r);var i=n.exec(r);if(!i){this.addError('Invalid function name of "'+r+'"'),this.generateCodeForChildren(e);return}var s=i[1],o=i[2]?i[2].split(/\s*,\s*/):[],u=e.getAttribute("core:definedFunctions");u||(u=e.setAttribute("core:definedFunctions",{})),u[s]={params:o},e.statement("function "+r+" {").indent(function(){e.line("return context.c(function() {").indent(function(){this.generateCodeForChildren(e)},this).line("});")},this).line("}")}},r});
raptor.defineClass("templating.taglibs.core.IncludeNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=raptor.require("json.stringify").stringify,n=function(e){n.superclass.constructor.call(this),e&&this.setProperties(e)};return n.prototype={doGenerateCode:function(e){var n=this.getProperty("template"),r=this.getProperty("templateData")||this.getProperty("template-data"),i;if(n){this.removeProperty("template");var s;if(r)s=r;else{var o=[];this.forEachPropertyNS("",function(e,n){o.push(t(e)+": "+n)},this),s="{"+o.join(",")+"}"}e.include(n,s)}else if(i=this.getAttribute("resource")){var u=this.getProperty("static")!==!1;if(u){var a=raptor.require("resources").findResource(i);if(!a.exists()){this.addError('"each" attribute is required');return}e.write(raptor.require("json.stringify").stringify(a.readAsString()))}}else this.addError('"template" or "resource" attribute is required')}},n});
raptor.defineClass("templating.taglibs.core.OtherwiseNode","templating.compiler.Node",function(e){"use strict";var t=e.require("strings"),n=function(e){n.superclass.constructor.call(this),e&&this.setProperties(e)};return n.prototype={doGenerateCode:function(e){e.line("else {").indent(function(){this.generateCodeForChildren(e)},this).line("}")},toString:function(){return"<c:otherwise>"}},n});
raptor.defineClass("templating.taglibs.core.WhenNode","templating.compiler.Node",function(){"use strict";var e=raptor.errors,t=function(e){t.superclass.constructor.call(this),e&&this.setProperties(e)};return t.prototype={doGenerateCode:function(e){var t=this.getProperty("test");t||this.addError('"test" attribute is required for '+this.toString()+" tag.");var n="if ("+t+")";this.firstWhen?e.statement(n+" {"):e.line("else "+n+" {"),e.indent(function(){this.generateCodeForChildren(e)},this).line("}")}},t});
raptor.defineClass("templating.taglibs.core.WithNode","templating.compiler.Node",function(e){"use strict";var t=e.errors,n=e.require("templating.compiler.AttributeSplitter"),r=/^[A-Za-z_][A-Za-z0-9_]*$/,i=function(e){i.superclass.constructor.call(this),e&&this.setProperties(e)};return i.prototype={doGenerateCode:function(t){var i=this.getProperty("vars"),s=this;i||this.addError('"vars" attribute is required');var o=n.parse(i,{"*":{type:"expression"}},{ordered:!0,errorHandler:function(e){s.addError('Invalid variable declarations of "'+i+'". Error: '+e)}}),u=[];e.forEach(o,function(e,n){r.test(e.name)||this.addError('Invalid variable name of "'+e.name+'" in "'+i+'"'),u.push((n>0?t.indentStr(1)+"    ":"")+e.name+(e.value?"="+e.value:"")+(n<o.length-1?",\n":";"))},this),t.statement("(function() {").indent(function(){t.statement("var "+u.join("")),this.generateCodeForChildren(t)},this).line("}());")}},i});
$rset("resource","/templating/taglibs/core/core.rtld",'<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    \n    <uri>http://raptorjs.org/templates/core</uri>\n    <short-name>core</short-name>\n    <prefix>c</prefix>\n    \n    <tag id="template">\n        \n        <name>template</name> \n        \n        <attribute>\n            <name>name</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>params</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>imports</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <uri>*</uri>\n            <name>functions</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <node-class>templating.taglibs.core.TemplateNode</node-class>\n    </tag>\n    \n    <tag extends="template">\n    \n        <uri></uri>\n        <name>template</name>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <attribute>\n            <name>space</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>whitespace</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>for</name>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n\n        <attribute>\n            <name>if</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>else</name>\n            <type>empty</type>\n        </attribute>\n        \n        <attribute>\n            <name>else-if</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>attrs</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>when</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>with</name>\n            <type>custom</type>\n        </attribute>\n        \n        <attribute>\n            <name>otherwise</name>\n            <type>empty</type>\n        </attribute>\n        \n        <attribute>\n            <name>parse-body-text</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>strip</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>bodyContent</name>\n            <type>expression</type>\n            <deprecated>Use "content" attribute instead. This will be removed in the future.</deprecated>\n        </attribute>\n        \n        <attribute>\n            <name>content</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>replace</name>\n            <type>expression</type>\n        </attribute>\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.core.CoreTagTransformer</class-name>\n        </transformer>\n    </tag>\n    \n    \n    \n    <tag>\n        \n        <name>for</name> \n\n        <node-class>templating.taglibs.core.ForNode</node-class>\n        \n        <attribute>\n            <name>each</name>\n            <required>true</required>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>separator</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>status-var</name>\n            <type>identifier</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>varStatus</name>\n            <type>identifier</type>\n            <allow-expressions>false</allow-expressions>\n            <deprecated>Use status-var instead. This will be removed in the future.</deprecated>\n        </attribute>\n        \n        <attribute>\n            <name>for-loop</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>write</name> \n\n        <node-class>templating.taglibs.core.WriteNode</node-class>\n        \n        <attribute>\n            <name>value</name>\n            <required>true</required>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>escapeXml</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n            <deprecated>Use escape-xml instead. This will be removed in the future.</deprecated>\n        </attribute>\n        \n        <attribute>\n            <name>escape-xml</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>if</name> \n\n        <node-class>templating.taglibs.core.IfNode</node-class>\n\n        <attribute>\n            <name>test</name>\n            <type>expression</type>\n        </attribute>\n\n    </tag>\n    \n    <tag>\n        <name>else</name> \n        <node-class>templating.taglibs.core.ElseNode</node-class>\n        \n        <transformer>\n            <class-name>templating.taglibs.core.ElseTagTransformer</class-name>\n            <after>templating.taglibs.core.CoreTagTransformer</after>\n            <properties>\n                <type>else</type>\n            </properties>\n        </transformer>\n    </tag>\n    \n    <tag>\n        <name>else-if</name>\n        <attribute name="test" type="expression"/>\n         \n        <node-class>templating.taglibs.core.ElseIfNode</node-class>\n        \n        <transformer>\n            <class-name>templating.taglibs.core.ElseTagTransformer</class-name>\n            <after>templating.taglibs.core.CoreTagTransformer</after>\n            <properties>\n                <type>else-if</type>\n            </properties>\n        </transformer>\n    </tag>\n    \n    <tag>\n        \n        <name>invoke</name> \n\n        <node-class>templating.taglibs.core.InvokeNode</node-class>\n\n        <attribute>\n            <name>function</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n            <required>true</required>\n        </attribute>\n\n        <attribute>\n            <name>*</name>\n            <uri></uri>\n            <type>string</type>\n            <allow-expressions>true</allow-expressions>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>choose</name> \n\n        <node-class>templating.taglibs.core.ChooseNode</node-class>\n\n    </tag>\n\n    <tag>\n        \n        <name>when</name> \n\n        <node-class>templating.taglibs.core.WhenNode</node-class>\n\n        <attribute>\n            <name>test</name>\n            <type>expression</type>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>otherwise</name> \n\n        <node-class>templating.taglibs.core.OtherwiseNode</node-class>\n\n    </tag>\n        \n    <tag>\n        \n        <name>def</name> \n\n        <node-class>templating.taglibs.core.DefNode</node-class>\n\n        <attribute>\n            <name>function</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>with</name> \n\n        <node-class>templating.taglibs.core.WithNode</node-class>\n\n        <attribute>\n            <name>vars</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>include</name> \n\n        <node-class>templating.taglibs.core.IncludeNode</node-class>\n\n        <attribute>\n            <name>template</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>templateData</name>\n            <type>expression</type>\n            <deprecated>Use template-data instead. This will be removed in the future.</deprecated>\n        </attribute>\n        \n        <attribute>\n            <name>template-data</name>\n            <type>expression</type>\n        </attribute>\n        \n        <attribute>\n            <name>resource</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>static</name>\n            <type>boolean</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <dynamic-attributes>true</dynamic-attributes>\n        \n    </tag>\n    \n    <tag>\n        \n        <name>attr</name> \n\n        <attribute>\n            <name>name</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>value</name>\n            <type>string</type>\n        </attribute>\n        \n        <attribute>\n            <name>uri</name>\n            <type>string</type>\n        </attribute>\n\n        <attribute>\n            <name>prefix</name>\n            <type>string</type>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>var</name> \n\n        <node-class>templating.taglibs.core.VarNode</node-class>\n\n        <attribute>\n            <name>name</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>value</name>\n            <type>expression</type>\n        </attribute>\n    </tag>\n    \n    <tag>\n        \n        <name>assign</name> \n\n        <node-class>templating.taglibs.core.AssignNode</node-class>\n\n        <attribute>\n            <name>var</name>\n            <type>custom</type>\n            <allow-expressions>false</allow-expressions>\n        </attribute>\n        \n        <attribute>\n            <name>value</name>\n            <type>expression</type>\n        </attribute>\n    </tag>\n    \n    <text-transformer>\n        <class-name>templating.taglibs.core.CoreTextTransformer</class-name>\n    </text-transformer>\n    \n</raptor-taglib>'),$radd("rtld","/templating/taglibs/core/core.rtld");
raptor.defineClass("templating.taglibs.html.HtmlTagTransformer",function(){"use strict";var e=raptor.require("templating.taglibs.html.DocTypeNode");return{process:function(t,n){if(t.isElementNode()){var r=n.options||{},i=r.preserveWhitespace||{},s=r.allowSelfClosing||{},o=r.startTagOnly||{},u=t.uri?t.uri+":"+t.localName:t.localName;t.isPreserveWhitespace()==null&&i[u]===!0&&t.setPreserveWhitespace(!0),s[u]===!0&&t.setAllowSelfClosing(!0),n.options.xhtml!==!0&&o[u]===!0&&t.setStartTagOnly(!0);if(t.getQName()==="html"&&t.hasAttributeNS("http://raptorjs.org/templates/html","doctype")){var a=t.getAttributeNS("http://raptorjs.org/templates/html","doctype"),f=new e({value:a,pos:t.getPosition()});t.parentNode.insertBefore(f,t),t.removeAttributeNS("http://raptorjs.org/templates/html","doctype")}}}}});
$rset("resource","/templating/taglibs/html/html.rtld",'<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>html</short-name>\n    <uri>http://raptorjs.org/templates/html</uri>\n\n    <tag>\n        \n        <name>pre</name> \n        <uri></uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.html.HtmlTagTransformer</class-name>\n        </transformer>\n    </tag>\n    \n    <tag>\n        \n        <name>html</name> \n        <uri></uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <attribute name="doctype" type="string"/>\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.html.HtmlTagTransformer</class-name>\n        </transformer>\n    </tag>\n\n    <tag>\n        <name>doctype</name>\n        <attribute name="value" type="custom"/>\n        <node-class>templating.taglibs.html.DocTypeNode</node-class>\n    </tag>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.html.HtmlTagTransformer</class-name>\n        </transformer>\n    </tag>\n    \n</raptor-taglib>'),$radd("rtld","/templating/taglibs/html/html.rtld");
raptor.defineClass("templating.taglibs.widgets.WidgetsTagTransformer",function(e){"use strict";var t="http://raptorjs.org/templates/widgets",n=e.require("strings"),r=e.require("objects"),i=e.require("json.stringify").stringify,s=e.require("templating.compiler.AttributeSplitter");return{process:function(o,u,a){var f,l=o.getPropertiesNS(t),c={},h=[];if(l){var p=[];e.forEachEntry(l,function(e,t){if(e==="id")p.push(e),c.scope="widget",c.id=t;else if(n.startsWith(e,"event-")){p.push(e);var r=s.parse(t,{"*":{type:"expression"},target:{type:"custom"}},{defaultName:"target",errorHandler:function(n){o.addError('Invalid value of "'+t+'" for event attribute "'+e+'". Error: '+n)}}),i=e.substring("event-".length),u=r.target;if(!u){o.addError('Invalid value of "'+t+'" for event attribute "'+e+'". Target message not provided');return}delete r.target,h.push({sourceEvent:i,targetMessage:u,eventProps:r})}}),p.forEach(function(e){o.removePropertyNS(t,e)}),h.length&&(c.events=a.makeExpression("["+h.map(function(t){var n;return r.isEmpty(t.eventProps)||(n=[],e.forEachEntry(t.eventProps,function(e,t){n.push(i(e)+": "+t)},this),n="{"+n.join(", ")+"}"),"["+i(t.sourceEvent)+","+i(t.targetMessage)+(n?","+n:"")+"]"}).join(",")+"]")),r.isEmpty(c)||o.setProperty("widgetArgs",a.makeExpression("{"+r.entries(c).map(function(e){return e.key+": "+e.value}).join(", ")+"}"))}if(f=o.getAttributeNS(t,"widget")){o.removeAttributeNS(t,"widget");var d=u.createTagHandlerNode(t,"widget");o.parentNode.replaceChild(d,o),d.appendChild(o),d.setProperty("jsClass",f);var v=o.getAttribute("id");v?(v=u.convertType(v,"string",!0),d.setProperty("id",v)):o.setAttribute("id","${widget.elId()}")}}}});
raptor.defineClass("templating.taglibs.widgets.InitWidgetsTag",function(e){"use strict";var t=e.require("widgets");return{process:function(e,n){if(!t.hasWidgets(n))return;var r=e.includeScriptTag!==!1;r&&n.write('<script type="text/javascript">'),t.writeInitWidgetsCode(n,!0),r&&n.write("</script>")}}});
raptor.defineClass("templating.taglibs.widgets.WidgetTag",function(e){"use strict";var t=e.require("widgets");return{process:function(e,n){var r=e.jsClass,i=e.config,s=e.widgetArgs,o=e.id,u,a,f;s&&(u=s.scope,a=s.id,f=s.events);var l=n.getAttributes(),c=l.widgetStack||(l.widgetStack=[]),h=t.addWidget(r,o,a,i,c[c.length-1],u,f,n);c.push(h);try{e.invokeBody(h)}finally{c.splice(c.length-1,1)}}}});
$rset("resource","/templating/taglibs/widgets/widgets.rtld",'<raptor-taglib>\n    \n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>widgets</short-name>\n    <uri>http://raptorjs.org/templates/widgets</uri>\n    \n    <attribute name="id" type="string"/>\n    <attribute pattern="event-*" type="custom" allow-expressions="false"/>\n    \n    <tag>\n        \n        <name>*</name> \n        <uri>*</uri> <!-- Register attributes supported by all tags in all namespaces -->\n        \n        <attribute name="widget" type="string"/>\n        \n        <!-- Compiler that applies to all tags as well -->\n        <transformer>\n            <class-name>templating.taglibs.widgets.WidgetsTagTransformer</class-name>\n            <after>templating.taglibs.core.CoreTagTransformer</after>\n        </transformer>\n    </tag>\n    \n    <tag>\n        <name>widget</name>\n        <handler-class>templating.taglibs.widgets.WidgetTag</handler-class>\n        \n        <attribute name="jsClass" type="string"/>\n        \n        <nested-variable name="widget"/>\n        \n        <imported-variable target-property="config" expression="data.widgetConfig"/>\n        <imported-variable target-property="widgetArgs" expression="data.widgetArgs"/>\n    </tag>\n    \n    <tag>\n        <name>init-widgets</name>\n        <handler-class>templating.taglibs.widgets.InitWidgetsTag</handler-class>\n        \n        <attribute name="includeScriptTag" type="boolean"/>\n    </tag>\n    \n</raptor-taglib>'),$radd("rtld","/templating/taglibs/widgets/widgets.rtld");
$rset("rhtml","taglibs/test/Button",function(e){var t=e.e,n=e.ne,r=e.t,i=r("templating.taglibs.widgets.WidgetTag"),s=e.x;return function(e,t){var n=e.widget,r=e.buttonAttrs,o=e.label;t.t(i,{jsClass:"taglibs.test.ButtonWidget",config:e.widgetConfig,widgetArgs:e.widgetArgs},function(e){t.w("<button").a("id",e.elId()).a(r).w(">").w(s(o)).w("</button>")})}});
raptor.defineClass("taglibs.test.Button.ButtonTag",function(e){return{process:function(e,t){var n=e.disabled===!0,r={disabled:n?null:undefined,type:e.type||"button"};e.color&&(r.style="background-color: "+e.color),t.renderTemplate("taglibs/test/Button",{label:e.label,widgetArgs:e.widgetArgs,widgetConfig:{disabled:n},buttonAttrs:r})}}});
$rset("rhtml","taglibs/test/Container",function(e){var t=e.e,n=e.ne,r=e.x;return function(e,t){var n=e.widget,i=e.title;t.w("<div><h1>").w(r(i)).w('</h1><div class="bd">'),e.invokeBody(),t.w("</div></div>")}});
raptor.defineClass("taglibs.test.Container.ContainerTag",function(e){return{process:function(e,t){t.renderTemplate("taglibs/test/Container",{title:e.title,invokeBody:e.invokeBody})}}});
raptor.defineClass("taglibs.test.Greeting.GreetingTag",function(e){var t=function(){};return t.prototype={process:function(e,t){t.write("Hello "+e.name+"!")}},t});
raptor.defineClass("taglibs.test.Tab.TabTag",function(e){var t=function(){};return t.prototype={process:function(e,t){var n=e.tabs;n.addTab(e)}},t});
$rset("rhtml","taglibs/test/Tabs",function(e){var t=e.e,n=e.ne,r=e.f,i=e.xa,s=e.x;return function(e,t){var n=e.tabs;t.w('<div class="tabs"><ul class="nav nav-tabs">'),r(n,function(e){t.w("<li").a("class",e.liClass).w('><a href="#').w(i(e.id)).w('" data-toggle="tab">').w(s(e.title)).w("</a></li>")}),t.w('</ul><div class="tab-content">'),r(n,function(e){t.w("<div").a("id",e.id).a("class",e.divClass).w(">"),e.invokeBody(),t.w("</div>")}),t.w("</div></div>")}});
raptor.defineClass("taglibs.test.Tabs.TabsTag",function(e){var t=e.require("templating"),n=function(){};return n.prototype={process:function(n,r){var i=[],s=!1;n.invokeBody({addTab:function(e){e.active&&(e.activeFound=!0),e.id="tab"+i.length,i.push(e)}}),!s&&i.length&&(i[0].active=!0),e.forEach(i,function(e){e.liClass=e.active?"active":"",e.divClass=e.active?"tab-pane active":"tab-pane"}),t.render("taglibs/test/Tabs",{tabs:i},r)}},n});
raptor.define("taglibs.test.TestFunctions",{upperCase:function(e){return e?e.toString().toUpperCase():""},reverse:function(e){var t="";for(var n=e.length-1;n>=0;n--)t+=e.charAt(n);return t}});
$rset("resource","/taglibs/test/test.rtld",'<raptor-taglib>\n    \n    <tlib-version>1.0</tlib-version>\n    <short-name>test</short-name>\n    <uri>http://raptorjs.org/templates/test</uri>\n    \n    <import-taglib path="/taglibs/test/Button/Button.rtld"/>\n    <import-taglib path="/taglibs/test/Container/Container.rtld"/>\n    <import-taglib path="/taglibs/test/Greeting/Greeting.rtld"/>\n    <import-taglib path="/taglibs/test/Tab/Tab.rtld"/>\n    <import-taglib path="/taglibs/test/Tabs/Tabs.rtld"/>\n    \n    <function class="taglibs.test.TestFunctions">\n        <name>upperCase</name>\n    </function>\n    \n    <function class="taglibs.test.TestFunctions">\n        <name>reverse</name>\n    </function>\n\n</raptor-taglib>'),$radd("rtld","/taglibs/test/test.rtld");
$rset("resource","/taglibs/test/Button/Button.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>button</name>\n        <handler-class>taglibs.test.Button.ButtonTag</handler-class>\n        \n        <attribute name="label"/>\n        <attribute name="type"/>\n        <attribute name="color"/>\n        <attribute name="disabled" type="boolean"/>\n        <attribute name="id" uri="widgets" type="string"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Container/Container.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>container</name>\n        <handler-class>taglibs.test.Container.ContainerTag</handler-class>\n        \n        <attribute name="title"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Greeting/Greeting.rtld","<raptor-taglib>\n\n    <tag>\n        <name>greeting</name>\n        <handler-class>taglibs.test.Greeting.GreetingTag</handler-class>\n        <attribute>\n            <name>name</name>\n        </attribute>\n        <attribute>\n            <name>adult</name>\n            <type>boolean</type>\n        </attribute>\n    </tag>\n    \n</raptor-taglib>");
$rset("resource","/taglibs/test/Tab/Tab.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>tab</name>\n        <handler-class>taglibs.test.Tab.TabTag</handler-class>\n        \n        <attribute name="title"/>\n        \n        <imported-variable target-property="tabs" expression="tabs"/>\n    </tag>\n    \n</raptor-taglib>');
$rset("resource","/taglibs/test/Tabs/Tabs.rtld",'<raptor-taglib>\n\n    <tag>\n        <name>tabs</name>\n        <handler-class>taglibs.test.Tabs.TabsTag</handler-class>\n        <nested-variable name="tabs"/>\n    </tag>\n    \n</raptor-taglib>');
raptor.define("components.buttons.Button.ButtonWidget",function(e){var t=function(e){var t=this;this.toggled=!1,this.jqueryButton=this.$(),this._toggle=e.toggle,e.toggled&&this.toggle(),this.$().click(function(){t.publish("click",{button:this}),t._toggle&&t.toggle()})};return t.events=["click","toggle"],t.controller="components.buttons.Button.ButtonTag",t.prototype={toggle:function(){this.toggled=!this.toggled,this.jqueryButton.button("toggle"),this.publish("toggle",{button:this})}},t});
!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery);
raptor.define("components.nav.Nav.NavItemWidget",function(e){var t=function(e){var t=this;this.$().click(function(){t.publish("click",{el:this,nav:t})})};return t.events=["click"],t.prototype={show:function(){this.$("a").tab("show")}},t});
raptor.define("components.templates.Errors.ErrorsWidget",function(e){var t=function(e){this._hasErrors=!1};return t.prototype={setErrors:function(e){e&&e.length?(this.$("#ul").empty(),this.addErrors(e)):(this._hasErrors=!1,this.$("#ul").hide().empty())},clearErrors:function(){this.setErrors(null)},hasErrors:function(){return this._hasErrors},addErrors:function(t){if(t&&t.length){this._hasErrors=!0;var n=this.getEl("ul");e.forEach(t,function(t){var r=document.createElement("LI");r.innerHTML=e.require("templating").renderToString("components/templates/Errors-error",{message:t.message}),n.appendChild(r)},this),this.$("#ul").show()}}},t});
$rset("rhtml","components/templates/Errors-error",function(e){var t=e.e,n=e.ne,r=e.x;return function(e,t){var n=e.message;t.w('<span class="x">✘</span><pre class="message">').w(r(n)).w("</pre>")}});
raptor.define("components.templates.TemplateTestbed.TemplateTestbedWidget",function(raptor){var stringify=raptor.require("json.stringify").stringify,TemplateTestbedWidget=function(e){this.samples=e.samples,this.activeSample=null,this.topLevelIndex=-1,this.autoRender=!0,this.compileRequired=!0,this.dataModified=!0,this.optionsModified=!0,this.renderRequired=!0,this.optionsVisible=!1,raptor.require("pubsub").subscribe({toggleAutoFormatHtml:function(){this.toggleAutoFormatHtml()}},this),this.defaultOptionsJson=stringify(raptor.require("templating.compiler").defaultOptions),this.loadSample(0),this.renderButton.subscribe("click",function(e){this.update()},this),this.showCompiledToggleButton.subscribe("toggle",function(e){this.toggleCompiledOutput()},this),this.showOptionsToggleButton.subscribe("toggle",function(e){this.toggleCompilerOptions()},this),this.autoRenderToggleButton.subscribe("toggle",function(e){this.autoRender=!this.autoRender},this),this.templateEditor.subscribe("change",function(){this.compileRequired=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),this.dataEditor.subscribe("change",function(){this.dataModified=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),this.optionsEditor.subscribe("change",function(){this.optionsModified=!0,this.compileRequired=!0,this.renderRequired=!0,this.autoRender&&this.update()},this),raptor.require("pubsub").subscribe("loadSample",function(e){this.loadSample(e.sampleIndex)},this)};return TemplateTestbedWidget.prototype={loadSample:function(e){var t=this.samples,n,r;raptor.forEach(e,function(e){n=t[e],t=n?n.samples:null});while(!n.path){if(!n.samples)break;n=n.samples[0]}if(n===this.activeSample)return;if(raptor.isNumber(e)){this.topLevelIndex!=-1&&$("#subsamples-"+this.topLevelIndex).slideToggle(),this.topLevelIndex=e,$("#subsamples-"+e).slideToggle();var i=this.getWidget("subSampleNavItem-"+n.path);i&&i.show()}this.activeSample=n,n.templatesLoaded||(raptor.forEach(n.templates,function(e){raptor.require("templating.compiler").compileAndLoad(e.source,e.path)},this),n.templatesLoaded=!0),this.templateEditor.setValue(n.template),this.dataEditor.setValue(n.data),this.optionsEditor.setValue(n.options||this.defaultOptionsJson),this.update(),n.showCompilerOptions&&this.toggleCompilerOptions(!0)},handleEditorException:function(e,t){var n=t.errors;n||(n=[{message:t.toString()}]),e.addErrors(n)},update:function(){this.updateJson("compilerOptions","optionsModified",this.optionsEditor,this.optionsErrors),this.compileTemplate(),this.updateJson("templateData","dataModified",this.dataEditor,this.dataErrors),this.renderTemplate()},compileTemplate:function(){if(!this.compilerOptions)return;if(!this.compileRequired)return;this.templateName=null;var templateSrc=this.templateEditor.getValue(),compiler=raptor.require("templating.compiler"),compiledSrc;this.templateErrors.clearErrors();var templateDom;try{templateDom=raptor.require("xml.dom").createParser().parse(templateSrc)}catch(e){this.handleEditorException(this.templateErrors,"Invalid XML")}if(templateDom)try{var compilerOptions=raptor.extend({defaultTemplateName:"test",nameCallback:function(e){templateName=e}},this.compilerOptions);compiledSrc=compiler.compile(templateDom,"test",compilerOptions)}catch(e){this.handleEditorException(this.templateErrors,e)}if(compiledSrc){this.compiledEditor.setValue(compiledSrc),raptor.require("templating").unload(templateName);try{eval(compiledSrc),this.templateName=templateName}catch(e){this.handleEditorException(this.templateErrors,e)}}else this.compiledEditor.setValue("");this.compileRequired=!1},updateJson:function(targetProp,modifiedProp,editor,errors){if(!this[modifiedProp])return;this[targetProp]=null,errors.clearErrors();var jsonData=editor.getValue(),data;try{data=eval("("+jsonData+")"),this[targetProp]=data}catch(e){this.handleEditorException(errors,e)}this[modifiedProp]=!1},renderTemplate:function(){if(!this.renderRequired)return;if(this.templateData&&this.templateName&&this.compilerOptions)try{var e=raptor.require("templating").renderToString(this.templateName,this.templateData);this.outputEditor.setValue(e),this.$("#htmlViewer").html(e)}catch(t){this.handleEditorException(this.templateErrors,t),this.outputEditor.setValue(""),this.$("#htmlViewer").html("")}else this.outputEditor.setValue(""),this.$("#htmlViewer").html("");this.renderRequired=!1},toggleCompiledOutput:function(){this.$("#compiledTemplateSection").toggle()},toggleCompilerOptions:function(e){if(arguments.length===1&&e===this.visible)return;this.optionsVisible=!this.optionsVisible,this.optionsVisible?this.$("#compilerOptionsSection").removeClass("compiler-options-hidden"):this.$("#compilerOptionsSection").addClass("compiler-options-hidden")},toggleAutoFormatHtml:function(){this.outputEditor.setAutoFormat(!this.outputEditor.isAutoFormat())}},TemplateTestbedWidget});