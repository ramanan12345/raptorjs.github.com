<optimizer-config>

    <!-- Load params from file -->
    <params file="local-properties.json"/>
    
    <!-- 
    NOTE: Params can be passed in through the CLI
          or through the JavaScript API
    -->

    <!-- Provide defaults for parameters -->
    <params>
        <profile>development</profile>
        <publish>false</publish>
    </params>

    <!-- Enable a profile -->
    <enable-profile>${profile}</enable-profile>
    
    <!-- Development Profile -->
    <profile name="development">
        
        <!-- Provide configuration for RaptorJS -->
        <raptor-config>
        {
            logging: {
                loggers: {
                    'ROOT': {level: 'WARN'}
                }
            }
        }
        </raptor-config>

        <!-- Set globally enabled extensions (including console logging for debugging) -->
        <enabled-extensions>jquery,browser,logging.console,development</enabled-extensions>

        <!-- Disabling bundling of resources so line numbers match up-->
        <bundling-enabled>false</bundling-enabled>

        <!-- For resources that are not compiled, generate URLs to the files on disk -->
        <in-place-deployment-enabled>true</in-place-deployment-enabled>

        <!-- Disable minification -->
        <minify-js>false</minify-js>

        <!-- Don't include checksums in resource URLs -->
        <checksums-enabled>false</checksums-enabled>
        
    </profile>
    
    <!-- Production Profile -->
    <profile name="production">
        
        <!-- Combine resources based on the configuration below -->
        <bundling-enabled>true</bundling-enabled>
        <!-- NOTE: Any resources that are not part of a configured bundle
                   will become part of a default "page" bundle -->

        <!-- Include checksums in all resource URLs -->        
        <checksums-enabled>true</checksums-enabled>

        <!-- Set globally enabled extensions (not including console logging) -->
        <enabled-extensions>jquery,browser,production</enabled-extensions>
        
        <!-- In-place deployment will not work for public websites -->
        <in-place-deployment-enabled>false</in-place-deployment-enabled>

        <!-- Set the URL prefix -->
        <resource-url-prefix>/static/</resource-url-prefix>
        <!-- NOTE: If you have a CDN then include the host
                   name for the CDN in the URL prefix -->

        <!-- Enable minification -->
        <minify-js>true</minify-js>

        <!-- Configure RaptorJS to not include logging -->
        <raptor-config>
        {
        }
        </raptor-config>
    </profile>

    <!-- The optimizer will automatically discover pages by searching in
         the specified directories. -->
    <page-search-path>
        <dir path="pages"/>
    </page-search-path>
  
    <!-- Tell the optimizer where it can find modules/resources/packages --> 
    <resource-search-path>
        <dir path="."/>
        <dir path="../shared"/>
        <dir path="modules"/>
    </resource-search-path>

    <!-- Clean out the output directory every time the optimizer is executed -->
    <clean-dirs>
        <dir path="../static"/>
    </clean-dirs>

    <!-- Write resource bundles to the specified directory -->
    <bundles-output-dir>../static</bundles-output-dir>

    <!-- For static pages, write them to disk when the optimizer is executed -->
    <write-rendered-pages enabled="true" output-dir=".."/>
    <!-- NOTE: Should only be enabled for static sites such as this documentation -->

    <!-- Configure zero or more bundles -->
    <bundles name="default">
        <!-- Each bundle is given a name that is used for the output file.
             NOTE: A resource becomes part of the first bundle that it is
                   added to so *order matters*. -->
        <bundle name="jquery">
            <module name="jQuery"/>
        </bundle>
        <bundle name="core">
            <module name="core" recursive="true"/>
            <!-- NOTE: Setting recursive to "true" will cause the optimizer
                       to include all of the module's resources and
                       all of the resources for packages that it depends
                       on (recursively). -->
            
            <!-- Include the dependency that will generate the code to 
                 initialize RaptorJS -->
            <init-raptor/> 

            <module name="listeners" recursive="true"/>
        </bundle>
        <bundle name="widgets">
            <module name="widgets" recursive="true"/>
        </bundle>
        <bundle name="bootstrap">
            <module name="components/icons/Icon"/>
            <module name="Bootstrap/reset" recursive="true"/>
            <module name="Bootstrap/scaffolding" recursive="true"/>
            <module name="Bootstrap/layouts" recursive="true"/>
            <module name="Bootstrap/type" recursive="true"/>
            <module name="Bootstrap/dropdowns" recursive="true"/>
            <module name="Bootstrap/buttons" recursive="true"/>
            <module name="Bootstrap/button-groups" recursive="true"/>
            <module name="Bootstrap/navs" recursive="true"/>
            <module name="Bootstrap/navbar" recursive="true"/>
        </bundle>
        <bundle name="code-editor">
            <module name="components/editors/CodeEditor" recursive="true"/>
            <module name="components/editors/CodeEditor/mode-javascript" recursive="true"/>
            <module name="components/editors/CodeEditor/mode-htmlmixed" recursive="true"/>
            <module name="components/editors/CodeEditor/mode-xml" recursive="true"/>
        </bundle>
        
        <bundle name="templating">
            <module name="templating" recursive="true"/>
        </bundle>
    </bundles>
    
</optimizer-config>